(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{412:function(t,e,a){"use strict";a.r(e);var s=a(45),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第-19-章-过滤器-混合-剪切和掩蔽-filters-blending-clipping-and-masking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第-19-章-过滤器-混合-剪切和掩蔽-filters-blending-clipping-and-masking"}},[t._v("#")]),t._v(" 第 19 章 过滤器，混合，剪切和掩蔽 Filters, Blending, Clipping, and Masking")]),t._v(" "),a("p",[t._v("Over the past decade, CSS has accumulated some interesting new features. These allow authors to alter the appearance of element with visual filters, specify different ways to visually blend elements with whatever is behind them, and alter the presentation of elements by showing parts and hiding other parts. While these may seem like disparate concepts, they all share one thing in common: they allow elements to be altered in ways that were previously very difficult or impossible.")]),t._v(" "),a("blockquote",[a("p",[t._v("在过去的十年中，CSS 积累了一些有趣的新特性。这允许作者使用可视化过滤器来改变元素的外观，指定不同的方式来可视化地混合元素及其背后的内容，并通过显示部分和隐藏其他部分来改变元素的表示。虽然这些可能看起来是不同的概念，但它们都有一个共同点:它们允许以以前非常困难或不可能的方式更改元素。")])]),t._v(" "),a("h2",{attrs:{id:"_19-1-css-filters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-1-css-filters"}},[t._v("#")]),t._v(" 19.1 CSS Filters")]),t._v(" "),a("p",[t._v("The veterans among us may remember that a long time ago, Microsoft put a "),a("code",[t._v("filter")]),t._v(" property into their CSS support, which was used to pull in DirectX visual effects. In the time since, CSS has gained a "),a("code",[t._v("filter")]),t._v(" property of its own, and while it’s similar in concept to what Microsoft did, it isn’t really the same thing. Among other changes, CSS defines a number of built-in visual filter effects, in addition to permitting the loading of filters defined in external files.")]),t._v(" "),a("blockquote",[a("p",[t._v("我们中的老手可能还记得，很久以前，微软在他们的 CSS 支持中加入了一个 "),a("code",[t._v("filter")]),t._v(" 属性，用来获取 DirectX 的视觉效果。从那以后，CSS 获得了自己的 "),a("code",[t._v("filter")]),t._v(" 属性，虽然它在概念上类似于微软所做的，但实际上并不是一回事。除了其他更改外，CSS 还定义了许多内置的视觉过滤器效果，允许加载外部文件中定义的过滤器。")])]),t._v(" "),a("Cards",{attrs:{cards:"filter"}}),t._v(" "),a("p",[t._v("The value syntax permits a comma-separated list of filter functions, with each filter applied in sequence. Thus, given the declaration filter: opacity(0.5) blur(1px);, the opacity is applied to the element, and the semi-transparent result is then blurred. If the order were reversed, so too would be the order of application: the fully opaque element is burred, and the resulting blur made semi-transparent.")]),t._v(" "),a("p",[t._v("The CSS specification talks of “input images” when discussing filter, but this doesn’t mean filter is only used on images. Any HTML element can be filtered, and all graphic SVG elements can be filtered. The input image is a visual copy of the rendered element before it is filtered. Filters are applied to this input, and the final filtered result is then rendered to the display medium.")]),t._v(" "),a("p",[t._v("All the values permitted are effectively functions, with the permitted value types for each being dependent on the function in question. I’ve grouped these functions into a few broad categories for ease of understanding.")]),t._v(" "),a("h3",{attrs:{id:"_19-1-1-basic-filters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-1-1-basic-filters"}},[t._v("#")]),t._v(" 19.1.1 Basic Filters")]),t._v(" "),a("p",[t._v("These filters are basic in the sense that they cause changes that their names directly describe: blurring, drop shadows, and opacity changes:")]),t._v(" "),a("p",[a("code",[t._v("blur(<length>)")])]),t._v(" "),a("p",[t._v("Blurs the element’s contents using a Gaussian blur whose standard deviation is defined by the "),a("code",[t._v("<length>")]),t._v(" value supplied, where a value of 0 leaves the element unchanged. Negative lengths are not permitted.")]),t._v(" "),a("p",[a("code",[t._v("opacity( [ <number> | <percentage> ] )")])]),t._v(" "),a("p",[t._v("Applies a transparency filter to the element in a manner very similar to the opac ity property, where the value 0 yields a completely transparent element and a value of 1 or 100% leaves the element unchanged. Negative values are not permitted. Values greater than 1 and 100% are permitted, but are clipped to be 1 or 100% for the purposes of computing the final value.")]),t._v(" "),a("Tips",{attrs:{tips:"orange"}},[t._v("The specification makes clear that filter: opacity() is not meant to be a replacement or shorthand for the opacity property, and in fact both can be applied to the same element, resulting in a sort of double-transparency.")]),t._v(" "),a("p",[a("code",[t._v("drop-shadow(<length>{2,3} <color>?)")])]),t._v(" "),a("p",[t._v("Creates a drop shadow that matches the shape of the element’s alpha channel, with a blur and using an optional color. The handling of the lengths and colors is the same as for the property box-shadow, which means that while the first two "),a("code",[t._v("<length>")]),t._v("s can be negative, the third (which defines the blur) cannot. If no "),a("code",[t._v("<color>")]),t._v(" value is supplied, the used color is the same as the computed value of the color property for the element.")]),t._v(" "),a("p",[t._v("The effects of these filter functions, alone and in combination, is shown in Figure 19-1.")]),t._v(" "),a("Figures",{attrs:{figure:"19-1"}},[t._v("Basic filter effects")]),t._v(" "),a("p",[t._v("Before we go one, there are two things that deserve further exploration. The first is how drop-shadow() really operates. Just by looking at Figure 19-1, it’s easy to get the impression that drop shadows are bound to the element box, because of the boxlike natures of the drop shadows shown there. But that’s just because the image used to illustrate filters is a PNG, which is to say a raster image, and more importantly one that doesn’t have any alpha channel. The white parts are opaque white, in other words.")]),t._v(" "),a("p",[t._v("If the image has transparent bits, then drop-shadow() will use those in computing the shadow. This can be a GIF89a, a PNG, a JPEG2000, an SVG, or any other alpha-aware image format. To see what this means, consider Figure 19-2.")]),t._v(" "),a("p",[t._v("The other thing to point out in Figure 19-2 is the last image has two drop shadows. This was accomplished as follows:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("drop-shadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0 0 0.5em yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("drop-shadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.5em 0.75em 30px gray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-2"}},[t._v("Drop shadows and alpha channels")]),t._v(" "),a("p",[t._v("Any number of filters can be chained together like this. To pick another example, you\ncould write:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("blur")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("3px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("drop-shadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.5em 0.75em 30px gray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("opacity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("That would get you a blurry, drop-shadowed, half-opaque element. It might not be the most reader-friendly effect for text, but it’s possible nonetheless. This functionchaining is possible with all filter functions, both those we’ve seen and those to\ncome.")]),t._v(" "),a("h3",{attrs:{id:"_19-1-2-color-filtering"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-1-2-color-filtering"}},[t._v("#")]),t._v(" 19.1.2 Color Filtering")]),t._v(" "),a("p",[t._v("This next set of filter functions alter the colors present in the filtered element in some way. This can be as simple as leaching out the colors, or as complex as shifting all the colors by way of an angle value.")]),t._v(" "),a("p",[t._v("Note that for the first three of the four of the following functions, all of which accept either a "),a("code",[t._v("<number>")]),t._v(" or "),a("code",[t._v("<percentage>")]),t._v(", negative values are not permitted:")]),t._v(" "),a("p",[a("code",[t._v("grayscale( [ <number> | <percentage> ] )")])]),t._v(" "),a("p",[t._v("Alters the colors in the element to be shifted toward shades of gray. A value of 0 leaves the element unchanged, and a value of 1 or 100% will result in a fully grayscale element.")]),t._v(" "),a("p",[a("code",[t._v("sepia( [ <number> | <percentage> ] )")])]),t._v(" "),a("p",[t._v("Alters the colors in the element to be shifted toward shades of sepia tones (sepia is a reddish-brown color, defined by Wikipedia to be equivalent to #704214 or rgba(112,66,20) in the sRGB color space). A value of 0 leaves the element unchanged, and a value of 1 or 100% will result in a fully sepia element.")]),t._v(" "),a("p",[a("code",[t._v("invert( [ <number> | <percentage> ] )")])]),t._v(" "),a("p",[t._v("Inverts all colors in the element. Each of the R, G, and B values for a given color are inverted by subtracting them from 255 (in 0-255 notation) or from 100% (in 0%-100% notation). For example, a pixel with the color rgb(255,128,55) will be rendered as rgb(0,127,200); a different pixel with the value rgb(75%,57.2%, 23%) will become rgb(25%,42.8%,77%). A value of 0 leaves the element unchanged, and a value of 1 or 100% will result in a fully inverted element. A value of 0.5 or 50% would stop the inversion of each color at the midpoint of the color space, leading to an element of uniform gray.")]),t._v(" "),a("p",[a("code",[t._v("hue-rotate( <angle> )")])]),t._v(" "),a("p",[t._v("Alters the colors of the image by displacing their hue around an HSL color wheel, leaving saturation and lightness alone. A value of 0deg leaves the element unchanged. A value of 360deg (a full single rotation) will also present an apparently unchanged element, though the value is maintained, and values above 360deg are permitted. Negative values are also permitted, and cause an anticlockwise rotation as opposed to the clockwise rotation imposed by positive values. (In other words, the rotation is “compass-style,” with 0º at the top and increasing angle values in the clockwise direction.)")]),t._v(" "),a("p",[t._v("Examples of the preceding filter functions are shown in Figure 19-3, though fully appreciating them depends on a color rendering of the figure.")]),t._v(" "),a("Figures",{attrs:{figure:"19-3"}},[t._v("Color filter effects")]),t._v(" "),a("h3",{attrs:{id:"_19-1-3-brightness-contrast-and-saturation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-1-3-brightness-contrast-and-saturation"}},[t._v("#")]),t._v(" 19.1.3 Brightness, Contrast, and Saturation")]),t._v(" "),a("p",[t._v("While these filter functions also manipulate color, they do so in closely related ways, and are a familiar grouping to anyone who’s worked with images, particularly photographic images.")]),t._v(" "),a("p",[t._v("Note that for all these functions, values greater than 1 and 100% are permitted, but are clipped to be 1 or 100% for the purposes of computing the final value:")]),t._v(" "),a("p",[a("code",[t._v("brightness( [ <number> | <percentage> ] )")])]),t._v(" "),a("p",[t._v("Alters the brightness of the element’s colors. A value of 0 leaves the element a solid black, and a value of 1 or 100% leaves it unchanged. Values above 1 and 100% yield colors brighter than the base element, and can eventually reach a state of solid white.")]),t._v(" "),a("p",[a("code",[t._v("contrast( [ <number> | <percentage> ] )")])]),t._v(" "),a("p",[t._v("Alters the contrast of the element’s colors. The higher the contrast, the more colors are differentiated from each other; the lower the contrast, the more they converge on each other. A value of 0 leaves the element a solid gray, and a value of 1 or 100% leaves it unchanged. Values above 1 and 100% yield colors with greater contrast than is present in the base element.")]),t._v(" "),a("p",[a("code",[t._v("saturate( [ <number> | <percentage> ] )")])]),t._v(" "),a("p",[t._v("Alters the saturation of the element’s colors. The more saturated an element’s colors, the more intense they become; the less saturated they are, the more muted they appear. A value of 0 leaves the element completely unsaturated, leaving it effectively grayscale, whereas a value of 1 or 100% will leave the element unchanged. Unlike the preceding functions, saturate() permits and acts upon values greater than 1 or 100%; such values result in supersaturation.")]),t._v(" "),a("p",[t._v("Examples of the preceding filter functions are shown in Figure 19-4, though fully appreciating them depends on a color rendering of the figure. Also, the effects of greater-than-one values may be hard to make out in the figure, but they are present.")]),t._v(" "),a("Figures",{attrs:{figure:"19-4"}},[t._v("Brightness, contrast, and saturation filter effects")]),t._v(" "),a("h3",{attrs:{id:"_19-1-4-svg-filters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-1-4-svg-filters"}},[t._v("#")]),t._v(" 19.1.4 SVG Filters")]),t._v(" "),a("p",[t._v("The last filter value type is a function of a familiar kind: the url() value type. This allows authors to point to a (potentially very complicated) filter defined in SVG, whether it’s embedded in the document or stored in an external file.")]),t._v(" "),a("p",[t._v("This takes the form url("),a("code",[t._v("<uri>")]),t._v("), where the "),a("code",[t._v("<uri>")]),t._v(" value points to a filter defined using SVG syntax, specifically the "),a("code",[t._v("<filter>")]),t._v(" element. This can be a reference to a single SVG image which contains only a filter, such as url(wavy.svg), or it can be a pointer to an identified filter embedded in an SVG image, such as url(filters.svg#wavy).")]),t._v(" "),a("p",[t._v("The advantage of the latter pattern is that a single SVG can define multiple filters, thus consolidating all your filtering into one file for easy loading, caching, and referencing.")]),t._v(" "),a("p",[t._v("If a url() function points to a nonexistent file, or points to an SVG fragment that is not a "),a("code",[t._v("<filter>")]),t._v(" element, the function is invalid and the entire function list is ignored (thus rendering the filter declaration invalid).")]),t._v(" "),a("p",[t._v("Examining the full range of filtering possibilities in SVG is well beyond the scope of this work, but let’s just say that the power of the offered features is substantial. A few simple examples of SVG filtering are shown in Figure 19-5, with brief captions to indicate what kinds of operations the filters were built to create. (The actual CSS used to apply these filters looked like filter: url(filters.svg#rough).)")]),t._v(" "),a("Figures",{attrs:{figure:"19-5"}},[t._v("SVG filter effects")]),t._v(" "),a("p",[t._v("It’s easily possible to put every last bit of filtering you do into SVG, including replacements for every other filter function we’ve seen. (In fact, all the other filter functions are defined by the specification as literal SVG filters, to give a precise rendering target for implementors.) Remember, however, that you can chain CSS functions together. Thus, you might define a specular-highlight filter in SVG, and modify it with blurring or grayscale functions as needed. For example:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img.logo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("/assets/filters.svg#spotlight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img.logo.print")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("/assets/filters.svg#spotlight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grayscale")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img.logo.censored")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("/assets/filters.svg#spotlight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("blur")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("3px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Always keep in mind that the filter functions are applied in order. That’s why the gray scale() and blur() functions each come after the url()-imported spotlight filter. If they were reversed, the logos would be made grayscale or blurred first, and then have a highlight applied afterward.")]),t._v(" "),a("h2",{attrs:{id:"_19-2-compositing-and-blending"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-compositing-and-blending"}},[t._v("#")]),t._v(" 19.2 Compositing and Blending")]),t._v(" "),a("p",[t._v("In addition to filtering, CSS offers the ability to determine how elements are composited together. Take, for example, two elements that partially overlap due to positioning. We’re used to the one in front obscuring the one behind. This is sometimes called simple alpha compositing, in that you can see whatever is behind the element as long as some (or all) of it has alpha channel values less than "),a("code",[t._v("1")]),t._v(". Think of, for example, how you can see the background through an element with opacity: 0.5, or in the areas of a PNG or GIF87a that are set to be transparent.")]),t._v(" "),a("p",[t._v("But if you’re familiar with image-editing programs like Photoshop or GIMP, you know that image layers which overlap can be blended together in a variety of ways. CSS has gained the same ability. There are two blending strategies in CSS (at least as of late 2017): blending entire elements with whatever is behind them, and blending together the background layers of a single element.")]),t._v(" "),a("h3",{attrs:{id:"_19-2-1-blending-elements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-1-blending-elements"}},[t._v("#")]),t._v(" 19.2.1 Blending Elements")]),t._v(" "),a("p",[t._v("In situations where elements overlap, it’s possible to change how they blend together with the property mix-blend-mode.")]),t._v(" "),a("Cards",{attrs:{cards:"mix-blend-mode"}}),t._v(" "),a("p",[t._v("The way the CSS specification puts this is: “defines the formula that must be used to mix the colors with the backdrop.” That is to say, the element is blended with whatever is behind it (the “backdrop”), whether that’s pieces of another element, or just the background of its parent element.")]),t._v(" "),a("p",[t._v("The default, normal, means that the element’s pixels are shown as is, without any mixing with the backdrop, except where the alpha channel is less than 1. This is the “simple alpha compositing” mentioned previously. It’s what we’re all used to, which is why it’s the default value. A few examples are shown in Figure 19-6.")]),t._v(" "),a("Figures",{attrs:{figure:"19-6"}},[t._v("Simple alpha channel blending")]),t._v(" "),a("p",[t._v("For the rest of the mix-blend-mode keywords, I’ve grouped them into a few categories. Let’s also nail down a few definitions:")]),t._v(" "),a("ul",[a("li",[t._v("The foreground is the element that has mix-blend-mode applied to it.")]),t._v(" "),a("li",[t._v("The backdrop is whatever is behind that element. This can be other elements, the background of the parent element, and so on.")]),t._v(" "),a("li",[t._v("A pixel component is the color component of a given pixel: R, G, and B.")])]),t._v(" "),a("p",[t._v("If it helps, think of the foreground and backdrop as images that are layered atop one another in an image-editing program. With mix-blend-mode, you can change the blend mode applied to the top image (the foreground).")]),t._v(" "),a("h3",{attrs:{id:"_19-2-2-darken-lighten-difference-and-exclusion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-2-darken-lighten-difference-and-exclusion"}},[t._v("#")]),t._v(" 19.2.2 Darken, Lighten, Difference, and Exclusion")]),t._v(" "),a("p",[t._v("These blend modes might be called simple-math modes—they achieve their effect by directly comparing values in some way, or using simple addition and subtraction to modify pixels:")]),t._v(" "),a("p",[a("code",[t._v("darken")])]),t._v(" "),a("p",[t._v("Each pixel in the foreground is compared with the corresponding pixel in the backdrop, and for each of the R, G, and B values (the pixel components), the smaller of the two is kept. Thus, if the foreground pixel has a value corresponding to rgb(91,164,22) and the backdrop pixel is rgb(102,104,255), the resulting pixel will be rgb(91,104,22).")]),t._v(" "),a("p",[a("code",[t._v("lighten")])]),t._v(" "),a("p",[t._v("This blend is the inverse of darken: when comparing the R, G, and B components of a foreground pixel and its corresponding backdrop pixel, the larger of the two values is kept. Thus, if the foreground pixel has a value corresponding to rgb(91,164,22) and the backdrop pixel is rgb(102,104,255), the resulting pixel will be rgb(102,164,255).")]),t._v(" "),a("p",[a("code",[t._v("difference")])]),t._v(" "),a("p",[t._v("The R, G, and B components of each pixel in the foreground are compared to the corresponding pixel in the backdrop, and the absolute value of subtracting one from the other is the final result. Thus, if the foreground pixel has a value corresponding to rgb(91,164,22) and the backdrop pixel is rgb(102,104,255), the resulting pixel will be rgb(11,60,233). If one of the pixels is white, the resulting pixel will be the inverse of the non-white pixel. If one of the pixels is black, the result will be exactly the same as the non-black pixel.")]),t._v(" "),a("p",[a("code",[t._v("exclusion")])]),t._v(" "),a("p",[t._v("This blend is a milder version of difference. Rather than being | back - fore |, the formula is back + fore - (2 × back × fore), where back and fore are values in the range from 0-1. For example, an exclusion calculation of an orange (rgb(100%, 50%,0%)) and medium gray (rgb(50%,50%,50%)) will yield rgb(50%,50%,50%). For the red component, the math is 1 + 0.5 - (2 × 1 × 0.5), which reduces to 0.5, corresponding to 50%. For the blue and green components, the math is 0 + 0.5 - (2 × 0 × 0.5), which again reduces to 0.5. Compare this to difference, where the result would be rgb(50%,0%,50%), since each component is the absolute value of subtracting one from the other.")]),t._v(" "),a("p",[t._v("This last definition highlights the fact that for all blend modes, the actual values being operated on are in the range 0-1. The previous examples showing values like rgb(11,60,233) are normalized from the 0-1 range. In other words, given the example of applying the difference blend mode to rgb(91,164,22) and rgb(102,104,255), the actual operation is as follows:")]),t._v(" "),a("ul",[a("li",[t._v("rgb(91,164,22) is R = 91 ÷ 255 = 0.357; G = 164 ÷ 255 = 0.643; B = 22 ÷ 255 = 0.086. Similarly, rgb(102,104,255) corresponds to R = 0.4; G = 0.408; B = 1.")]),t._v(" "),a("li",[t._v("Each component is subtracted from the corresponding component, and the absolute value taken. Thus, R = | 0.357 - 0.4 | = 0.043; G = | 0.643 - 0.408 | = 0.235; B = | 1 - 0.086 | = 0.914. This could be expressed as rgba(4.3%,23.5%,91.4%), or (by multiplying each component by 255) as rgb(11,60,233).")])]),t._v(" "),a("p",[t._v("From all this, you can perhaps understand why the full formulas are not written out for every blend mode we cover. If you’re interested in the fine details, each blend mode’s formula is provided in the “Compositing and Blending Level 1” specification. Examples of the blend modes in this section are depicted in Figure 19-7.")]),t._v(" "),a("Figures",{attrs:{figure:"19-7"}},[t._v("Darken, lighten, difference, and exclusion blending")]),t._v(" "),a("h3",{attrs:{id:"_19-2-3-multiply-screen-and-overlay"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-3-multiply-screen-and-overlay"}},[t._v("#")]),t._v(" 19.2.3 Multiply, Screen, and Overlay")]),t._v(" "),a("p",[t._v("These blend modes might be called the multiplication modes—they achieve their effect by multiplying values together:")]),t._v(" "),a("p",[a("code",[t._v("multiply")])]),t._v(" "),a("p",[t._v("Each pixel component in the foreground is multiplied by the corresponding pixel component in the backdrop. This yields a darker version of the foreground, modified by what is underneath. This blend mode is symmetric, in that the result will be exactly the same even if you were to swap the foreground with the backdrop.")]),t._v(" "),a("p",[a("code",[t._v("screen")])]),t._v(" "),a("p",[t._v("Each pixel component in the foreground is inverted (see invert in the earlier section “Color Filtering” on page 948), multiplied by the inverse of the corresponding pixel component in the backdrop, and the result inverted again. This yields a lighter version of the foreground, modified by what is underneath. Like multiply, screen is symmetric.")]),t._v(" "),a("p",[a("code",[t._v("overlay")])]),t._v(" "),a("p",[t._v("This blend is a combination of multiply and screen. For foreground pixel components darker than 0.5 (50%), the multiply operation is carried out; for foreground pixel components whose values are above 0.5, screen is used. This makes the dark areas darker, and the light areas lighter. This blend mode is not symmetric, because swapping the foreground for the backdrop would mean a different pattern of light and dark, and thus a different pattern of multiplying versus screening.")]),t._v(" "),a("p",[t._v("Examples of these blend modes are depicted in Figure 19-8.")]),t._v(" "),a("Figures",{attrs:{figure:"19-8"}},[t._v("Multiply, screen, and overlay blending")]),t._v(" "),a("h3",{attrs:{id:"_19-2-4-hard-and-soft-light"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-4-hard-and-soft-light"}},[t._v("#")]),t._v(" 19.2.4 Hard and Soft Light")]),t._v(" "),a("p",[t._v("There blend modes are covered here because the first is closely related to a previous blend mode, and the other is just a muted version of the first:")]),t._v(" "),a("p",[a("code",[t._v("hard-light")])]),t._v(" "),a("p",[t._v("This blend is the inverse of overlay blending. Like overlay, it’s a combination of multiply and screen, but the determining layer is the backdrop. Thus, for backdrop pixel components darker than 0.5 (50%), the multiply operation is carried out; for backdrop pixel components lighter than 0.5, screen is used. This makes it appear somewhat as if the foreground is being projected onto the backdrop with a projector that employs a harsh light.")]),t._v(" "),a("p",[a("code",[t._v("soft-light")])]),t._v(" "),a("p",[t._v("This blend is a softer version of hard-light. That is to say, it uses the same operation, but is muted in its effects. The intended appearance is as if the foreground is being projected onto the backdrop with a projector that employs a diffuse light.")]),t._v(" "),a("p",[t._v("Examples of these blend modes are depicted in Figure 19-9.")]),t._v(" "),a("Figures",{attrs:{figure:"19-9"}},[t._v("Hard- and soft-light blending")]),t._v(" "),a("h3",{attrs:{id:"_19-2-5-color-dodge-and-burn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-5-color-dodge-and-burn"}},[t._v("#")]),t._v(" 19.2.5 Color Dodge and Burn")]),t._v(" "),a("p",[t._v("Color dodging and burning are interesting modes, in that they’re meant to lighten or darken a picture with a minimum of change to the colors themselves. The terms come from old darkroom techniques performed on chemical film stock:")]),t._v(" "),a("p",[a("code",[t._v("color-dodge")])]),t._v(" "),a("p",[t._v("Each pixel component in the foreground is inverted, and the component of the corresponding backdrop pixel component is divided by the inverted foreground value. This yields a brightened backdrop unless the foreground value is 0, in which case the backdrop value is unchanged.")]),t._v(" "),a("p",[a("code",[t._v("color-burn")])]),t._v(" "),a("p",[t._v("This blend is a reverse of color-dodge: each pixel component in the backdrop is inverted, the inverted backdrop value is divided by the unchanged value of the corresponding foreground pixel component, and the result is then inverted. This yields a result where the darker the backdrop pixel, the more its color will burn through the foreground pixel.")]),t._v(" "),a("p",[t._v("Examples of these blend modes are depicted in Figure 19-10.")]),t._v(" "),a("Figures",{attrs:{figure:"19-10"}},[t._v("Color dodge and burn blending")]),t._v(" "),a("h3",{attrs:{id:"_19-2-6-hue-saturation-luminosity-and-color"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-6-hue-saturation-luminosity-and-color"}},[t._v("#")]),t._v(" 19.2.6 Hue, Saturation, Luminosity, and Color")]),t._v(" "),a("p",[t._v("The final four blend modes are different than those we’ve seen before, because they do not perform operations on the R/G/B pixel components. Instead, they perform operations to combine the hue, saturation, luminosity, and color of the foreground and backdrop in different ways:")]),t._v(" "),a("p",[a("code",[t._v("hue")])]),t._v(" "),a("p",[t._v("For each pixel, combines the luminosity and saturation levels of the backdrop with the hue angle of the foreground.")]),t._v(" "),a("p",[a("code",[t._v("saturation")])]),t._v(" "),a("p",[t._v("For each pixel, combines the hue angle and luminosity level of the backdrop with the saturation level of the foreground.")]),t._v(" "),a("p",[a("code",[t._v("color")])]),t._v(" "),a("p",[t._v("For each pixel, combines the luminosity level of the backdrop with the hue angle and saturation level of the foreground.")]),t._v(" "),a("p",[a("code",[t._v("luminosity")])]),t._v(" "),a("p",[t._v("For each pixel, combines the hue angle and saturation level of the backdrop with the luminosity level of the foreground.")]),t._v(" "),a("p",[t._v("Examples of these blend modes are depicted in Figure 19-11.")]),t._v(" "),a("Figures",{attrs:{figure:"19-11"}},[t._v("Hue, saturation, luminosity, and color blending")]),t._v(" "),a("p",[t._v("These blend modes can be a lot harder to grasp without busting out raw formulas, and even those can be confusing if you aren’t familiar with how things like saturation and luminosity levels are determined. If you don’t feel like you quite have a handle on how they work, the best thing is to practice with a bunch of different images and simple color patterns.")]),t._v(" "),a("p",[t._v("Two things to note:")]),t._v(" "),a("ul",[a("li",[t._v("Remember that an element always blends with its backdrop. If there are other elements behind it, it will blend with them; if there’s a patterned background on the parent element, the blending will be done against that pattern.")]),t._v(" "),a("li",[t._v("Changing the opacity of a blended element will change the outcome, though not always in the way you might expect. For example, if an element with mix-blendmode: difference is also given opacity: 0.8, then the difference calculations will be scaled by 80%. More precisely, a scaling factor of 0.8 will be applied to the color-value calculations. This can cause some operations to trend toward flat middle gray, and others to shift the color changes.")])]),t._v(" "),a("h2",{attrs:{id:"_19-3-blending-backgrounds"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-3-blending-backgrounds"}},[t._v("#")]),t._v(" 19.3 Blending Backgrounds")]),t._v(" "),a("p",[t._v("Blending an element with its backdrop is one thing, but what if an element has multiple background images that overlap and also need to be blended together? That’s where background-blend-mode comes in.")]),t._v(" "),a("Cards",{attrs:{cards:"background-blend-mode"}}),t._v(" "),a("p",[t._v("We won’t go through an exhaustive list of all the blend modes and what they mean, because we did that in the section on mix-blend-mode. What they meant there, they mean here.")]),t._v(" "),a("p",[t._v("The difference is that when it comes to blending multiple backgrounds images together, they’re blended with each other against an empty background—that is, a completely transparent, uncolored backdrop. They do not blend with the backdrop of the element, except as directed by mix-blend-mode.")]),t._v(" "),a("p",[t._v("To see what that means, consider the following:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#example")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("star.svg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("diamond.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("linear-gradient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("135deg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" #f00"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" #aea"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-blend-mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" color-burn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" luminosity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" darken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Here we have three background images, each with its own blend mode. These are blended together into a single result, shown in Figure 19-12.")]),t._v(" "),a("Figures",{attrs:{figure:"19-12"}},[t._v("Three backgrounds blended together")]),t._v(" "),a("p",[t._v("So far, fine. Here’s the kicker: the result will be the same regardless of what might appear behind the element. We can change the parent’s background to white, gray, fuchsia, or a lovely pattern of repeating gradients, and in every case those three blended backgrounds will look exactly the same, pixel for pixel. They’re blended in isolation, a term we’ll return to shortly. We can see the above example (Figure 19-12) sitting atop a variety of backgrounds in Figure 19-13.")]),t._v(" "),a("Figures",{attrs:{figure:"19-13"}},[t._v("Blending with color versus transparency")]),t._v(" "),a("p",[t._v("Like multiple blended elements stacked atop each other, the blending of background layers works from the back to the front. Thus, if you have two background images over a solid background color, the background layer in the back is blended with the background color, and then the frontmost layer is blended with the result of the first blend. Consider:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#example")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("star.svg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("diamond.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" goldenrod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-mix-mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" color-burn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" luminosity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Given these styles, diamond.png is blended with the background color goldenrod using the luminosity blend. Once that’s done, star.png is blended with the results of the diamond-goldenrod blend using a color-burn blend.")]),t._v(" "),a("p",[t._v("Although it’s true that the background layers are blended in isolation, they’re also part of an element which may have its own blending rules via mix-blend-mode. Thus, the final result of the isolated background blend may be blended with the element’s backdrop after all. Given the following styles, the first example’s background will sit atop the element’s backdrop, but the rest will end up blended with it in some fashion, as illustrated in Figure 19-14:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".one")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mix-blend-mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" normal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".two")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mix-blend-mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" multiply"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".three")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mix-blend-mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" darken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".four")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mix-blend-mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" luminosity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".five")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mix-blend-mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" color-dodge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("bbm one"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("bbm two"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("bbm three"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("bbm four"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("bbm five"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-14"}},[t._v("Blending elements with their backdrops")]),t._v(" "),a("p",[t._v("Throughout this section, we’ve touched on the concept of blending in isolation, as a thing that backgrounds naturally do. Elements, on the other hand, do not naturally blend in isolation. As we’ll see next, that behavior can be changed.")]),t._v(" "),a("h3",{attrs:{id:"_19-3-1-blending-in-isolation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-3-1-blending-in-isolation"}},[t._v("#")]),t._v(" 19.3.1 Blending in Isolation")]),t._v(" "),a("p",[t._v("There may be times when you want to blend a number of different elements together, but in a group of their own, in the same way background layers on an element are blended. This is, as we’ve seen, called blending in isolation. If that’s what you’re after, then the isolation property is for you.")]),t._v(" "),a("Cards",{attrs:{cards:"isolation"}}),t._v(" "),a("p",[t._v("This pretty much does exactly what it says: it either defines an element to create an isolated blending context, or not. Given the following styles, then, we get the result shown in Figure 19-15:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mix-blend-mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" difference"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p.alone")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("isolation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" isolate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("alone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("diamond.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("diamond.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-15"}},[t._v("Blending in isolation, and not")]),t._v(" "),a("p",[t._v("Take particular note of where isolation was applied, and where mix-blend-mode was applied. The image is given the blend mode, but the containing element (in this case, a paragraph) is set to isolation blending. It’s done this way because you want the parent (or some ancestor element) to be isolated from the rest of the document, in terms of how its descendant elements are blended. So if you want an element to blend in isolation, look for an ancestor element to set to isolation: isolate.")]),t._v(" "),a("p",[t._v("There is an interesting wrinkle in all of this, which is that any element which establishes a stacking context is automatically isolated, regardless of the value for isola tion. If you transform an element using the transform property, for example, it will become isolated.")]),t._v(" "),a("p",[t._v("The complete list of stacking-context-establishing conditions, as of late 2017, are:")]),t._v(" "),a("ul",[a("li",[t._v("The root element (e.g., "),a("code",[t._v("<html>")]),t._v(")")]),t._v(" "),a("li",[t._v("Positioning an element relatively or absolutely and setting its z-index to anything other than auto")]),t._v(" "),a("li",[t._v("Positioning an element with fixed, regardless of its z-index value")]),t._v(" "),a("li",[t._v("Setting opacity to anything other than 1")]),t._v(" "),a("li",[t._v("Setting transform to anything other than none")]),t._v(" "),a("li",[t._v("Setting mix-blend-mode to anything other than normal")]),t._v(" "),a("li",[t._v("Setting filter to anything other than none")]),t._v(" "),a("li",[t._v("Setting perspective to anything other than none")]),t._v(" "),a("li",[t._v("Setting isolation to isolate")]),t._v(" "),a("li",[t._v("Applying will-change to any of the previous properties, even if they are not actually changed")])]),t._v(" "),a("p",[t._v("Thus, if you have a group of elements that are blended together and then blended with their shared backdrop, and you then transition the group’s opacity from 1 to 0, the group will suddenly become isolated during the transition. This might have no visual impact, depending on the original set of blends, but it very well might.")]),t._v(" "),a("h2",{attrs:{id:"_19-4-clipping-and-masking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-4-clipping-and-masking"}},[t._v("#")]),t._v(" 19.4 Clipping and Masking")]),t._v(" "),a("p",[t._v("Besides filtering and blending, CSS also has the ability to do both clipping and masking. These are methods of only showing portions of an element, using permitting a variety of simple shapes as well as the application of complete images and SVG elements. These can be used to make decorative bits of a layout more visually interesting, among other things—a common technique is to frame images or give them ragged edges.")]),t._v(" "),a("h3",{attrs:{id:"_19-4-1-clipping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-4-1-clipping"}},[t._v("#")]),t._v(" 19.4.1 Clipping")]),t._v(" "),a("p",[t._v("One of the possibilities we saw with filter was to apply a clipping path via SVG. That’s a valid use of filters, but if all you want to do is clip off pieces of the element, you can use the property clip-path instead.")]),t._v(" "),a("Cards",{attrs:{cards:"clip-path"}}),t._v(" "),a("p",[t._v("With clip-path, you’re able to define a clipping shape. This is essentially the area of the element inside which visible portions are drawn. Any part of the element that fall outside the shape is clipped off, leaving behind empty transparent space. The following code gives a clipped and an unclipped example of the same paragraph, with the result depicted in Figure 19-16:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0.75em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p.clipped")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clip-path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shapes.svg#cloud02"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-16"}},[t._v("Clipped and unclipped paragraphs")]),t._v(" "),a("p",[t._v("The default value, none, means no clipping is preformed, as you’d probably expect. If a "),a("code",[t._v("<uri>")]),t._v(" value is given (as in the previous example) and it points to a missing resource, or to an element in an SVG file that isn’t a "),a("code",[t._v("<clipPath>")]),t._v(", then no clipping occurs.")]),t._v(" "),a("p",[t._v("The rest of the values are either shapes written in CSS, reference boxes, or both.")]),t._v(" "),a("Tips",{attrs:{tips:"orange"}},[t._v("As of late 2017, URL-based clip paths work in Chrome only if the URL points to an embedded SVG inside the same document as the clipped element. External SVGs were not supported.")]),t._v(" "),a("h3",{attrs:{id:"_19-4-2-clip-shapes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-4-2-clip-shapes"}},[t._v("#")]),t._v(" 19.4.2 Clip Shapes")]),t._v(" "),a("p",[t._v("You can define clip shapes with one of a set of four simple shape functions. These are identical to the shapes used to define float shapes with shape-outside (see Chapter 10), so we won’t re-describe them in detail here. Here’s a brief recap:")]),t._v(" "),a("p",[a("code",[t._v("inset()")])]),t._v(" "),a("p",[t._v("Accepts from one to four lengths or percentage values, defining offsets from the edges of the bounding box, with optional corner rounding via the round keyword and another set of one to four lengths or percentages.")]),t._v(" "),a("p",[a("code",[t._v("circle()")])]),t._v(" "),a("p",[t._v("Accepts a single length, percentage, or keyword defining the radius of the circle, with an optional position for the circle’s center with the at keyword followed by one or two lengths or percentages.")]),t._v(" "),a("p",[a("code",[t._v("ellipse()")])]),t._v(" "),a("p",[t._v("Accepts a mandatory two lengths, percentages, or keywords defining the radii of the vertical and horizontal axes of the ellipse, with an optional position for the ellipse’s center with the at keyword followed by one or two lengths or percentages.")]),t._v(" "),a("p",[a("code",[t._v("polygon()")])]),t._v(" "),a("p",[t._v("Accepts a comma-separated list of space-separated x and y coordinates, using either lengths or percentages. Can be prefaced by a keyword defining the fill rule for the polygon.")]),t._v(" "),a("p",[t._v("A variety of examples of these clip shapes is shown in Figure 19-17, corresponding to the following styles. (The dotted borders have been added to show the outer edges of the original image, before clipping.)")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".ex01")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clip-path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".ex02")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clip-path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("inset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("10px 0 25% 2em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".ex03")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clip-path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("circle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("100px at 50% 50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".ex04")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clip-path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ellipse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("100px 50px at 75% 25%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".ex05")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clip-path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("polygon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("50% 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 100% 50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 50% 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0 50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".ex06")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clip-path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("polygon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 50px 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 150px 5px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 300px 150px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-17"}},[t._v("Various clip shapes")]),t._v(" "),a("p",[t._v("As Figure 19-17 shows, the elements are only visible inside the clip shapes. Anything outside that is just gone. But take note of how the clipped elements still take up the same space they would if they weren’t clipped at all. In other words, clipping doesn’t make the elements smaller. It just limits the part of them that’s actually drawn.")]),t._v(" "),a("h3",{attrs:{id:"_19-4-3-clip-boxes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-4-3-clip-boxes"}},[t._v("#")]),t._v(" 19.4.3 Clip Boxes")]),t._v(" "),a("p",[t._v("Unlike clip shapes, clip boxes aren’t specified using lengths or percentages. They correspond, for the most part, directly to boundaries in the box model.")]),t._v(" "),a("p",[t._v("If you just say clip-path: border-box, for example, the element is clipped along the outside edge of the border. This is likely what you’d expect anyway, since margins are transparent. Remember, however, that outlines can be drawn outside borders, so if you do clip at the border edge, any outlines will be clipped away.")]),t._v(" "),a("p",[t._v("When used by themselves, the values margin-box, padding-box, and content-box dictate that the clipping occur at the outer edges of the margin, padding, or content areas, respectively. These are diagrammed in Figure 19-18.")]),t._v(" "),a("Figures",{attrs:{figure:"19-18"}},[t._v("Various clipping boxes")]),t._v(" "),a("p",[t._v("There’s another part to Figure 19-18, which shows the SVG bounding boxes:")]),t._v(" "),a("p",[a("code",[t._v("view-box")])]),t._v(" "),a("p",[t._v("The nearest (that is, the closest ancestor) SVG viewport is used as the clipping box.")]),t._v(" "),a("p",[a("code",[t._v("fill-box")])]),t._v(" "),a("p",[t._v("The object bounding box is used as the clipping box. The object bounding box is the smallest box that will fit every part of the element’s geometry, taking into account any transformations (e.g., rotation), not including any strokes along its outside.")]),t._v(" "),a("p",[a("code",[t._v("stroke-box")])]),t._v(" "),a("p",[t._v("The stroke bounding box is used as the clipping box. The object bounding box is the smallest box that will fit every part of the element’s geometry, taking into account any transformations (e.g., rotation), including any strokes along its outside.")]),t._v(" "),a("p",[t._v("These values only apply to SVG elements that don’t have an associated CSS layout box. For such elements, if the CSS-style boxes (margin-box, border-box, paddingbox, content-box) are given, fill-box is used instead. Conversely, if one of the SVG bounding box values is applied to an element that does have a CSS layout box—which is most elements—then border-box is used instead.")]),t._v(" "),a("p",[t._v("It can be useful at times to be able to say something like clip-path: content-box just to clip off everything outside the content area, but where these box values really come into their own is in conjunction with a clipping shape. Suppose you have an ellipse() clip shape you want to apply to an element, and furthermore, you want to have it just touch the outer edges of the padding box. Rather than have to calculate the necessary radii by subtracting margins and borders from the overall element, you can just say clip-path: ellipse(50% 50%) padding-box;. That will center an elliptical clip shape at the center of the element, with horizontal and vertical radii half the element’s reference box (see Chapter 10), as shown in Figure 19-19, along with the effect of fitting to other boxes.")]),t._v(" "),a("Figures",{attrs:{figure:"19-19"}},[t._v("Fitting an elliptical clip shape to various boxes")]),t._v(" "),a("p",[t._v("Notice how the ellipse is cut off in the margin-box example? That’s because the margin is invisible, so while parts of it fall inside the elliptical clip shape, we can’t actually see those parts.")]),t._v(" "),a("p",[t._v("Interestingly, the bounding-box keywords can only be used in conjunction with clip shapes—not with an SVG-based clip path. The keywords that relate to SVG bounding boxes apply only if an SVG image is being clipped via CSS.")]),t._v(" "),a("p",[t._v("A warning about SVG clip paths: as of late 2017, all path coordinates are expressed in absolute units, and can’t be declared as percentages of the image’s height and width as the polygon() shape can. There are techniques involving the clipPathUnits SVG attribute, sometimes in conjunction with the transform SVG attribute, that yield equivalent results. Here’s an example of such a clipping path, with the result shown in Figure 19-20:")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("clipPath")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("hexlike"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("clipPathUnits")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("objectBoundingBox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("polygon")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("points")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0.5 0, 1 0.25, 1 0.75, 0.5 1, 0 0.75, 0 0.25"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("clipPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-20"}},[t._v("An image clipped with a scaling SVG clip path")]),t._v(" "),a("p",[t._v("The objectBoundingBox value fits the coordinates to the bounding box in use, and the coordinates are all in the range of 0–1. With that sort of setup, you get a clip path that behaves the same as a percentage-based polygon shape. You’d get the same clip shape shown in Figure 19-20 by using the following:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clip-path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("polygon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("50% 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 100% 25%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 100% 75%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 50% 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0 75%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0 25%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_19-4-4-clip-filling-rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-4-4-clip-filling-rules"}},[t._v("#")]),t._v(" 19.4.4 Clip Filling Rules")]),t._v(" "),a("p",[t._v("As with float shapes, it’s possible to change the way SVG shapes are filled, which is to say the exact clipping shape that is created when the path crosses over itself. This is managed with the property clip-rule.")]),t._v(" "),a("Cards",{attrs:{cards:"clip-rule"}}),t._v(" "),a("p",[t._v("It’s much easier to show than describe, so the difference between nonzero and even odd shape filling is depicted in Figure 19-21.")]),t._v(" "),a("Figures",{attrs:{figure:"19-21"}},[t._v("The two shape-filling options")]),t._v(" "),a("p",[t._v("Here, you can see how the star is drawn by following lines from the top center through each successive point. The nonzero star fills all of its interior, even when lines cross over each other. The evenodd star, by contrast, leaves parts of itself unfilled, which is why we can see the light blue gradient through its center.")]),t._v(" "),a("p",[t._v("The problem is that as of late 2017, even browsers that supported SVG clipping paths did not support this property, regardless of whether the SVG was embedded in the HTML or external files. Thus, if you want to set the shape-fill of a clipping path to evenodd, you’ll either need to recreate the SVG path as a CSS polygon, or make use of the SVG fill-rule attribute in the SVG file itself.")]),t._v(" "),a("h2",{attrs:{id:"_19-5-masks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-5-masks"}},[t._v("#")]),t._v(" 19.5 Masks")]),t._v(" "),a("p",[t._v("When we say a “mask,” what we mean is a shape inside which things are visible, and outside which they are not. Masks are thus very similar in concept to clipping paths. The primary differences are twofold: first, you can only use an image to define the areas of the element that are shown or clipped away with masks; and second, there are a lot more properties available to use with masks, allowing you to do things such as position, size, and repeat the masking image.")]),t._v(" "),a("Tips",{attrs:{tips:"orange"}},[t._v("As of late 2017, the Blink family supported most of the masking properties, but only with the -webkit- prefix. So instead of maskimage, Chrome and Safari supported -webkit-mask-image instead.")]),t._v(" "),a("h3",{attrs:{id:"_19-5-1-defining-a-mask"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-5-1-defining-a-mask"}},[t._v("#")]),t._v(" 19.5.1 Defining a Mask")]),t._v(" "),a("p",[t._v("The first step to applying a mask is to point to the image that you’ll be using to define the mask. This is accomplished with mask-image, which accepts any image type.")]),t._v(" "),a("Cards",{attrs:{cards:"mask-image"}}),t._v(" "),a("p",[t._v("Assuming the image reference is valid, this will give the user agent an image to use as a mask for the element to which it’s been applied.")]),t._v(" "),a("p",[t._v("We’ll start with a simple situation: one image applied to another, where both are the same height and width. Consider Figure 19-22, where both images are shown separately, and then with the first masked by the second.")]),t._v(" "),a("Figures",{attrs:{figure:"19-22"}},[t._v("A simple image mask")]),t._v(" "),a("p",[t._v("As you can see, in the parts of the second image that are opaque, the first image is visible. In the parts that are transparent, the first image is not visible. For the parts that are semi-transparent, the first image is also semi-transparent.")]),t._v(" "),a("p",[t._v("Here’s the basic code for the end result shown in Figure 19-22:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img.masked")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("theatre-masks.svg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("CSS doesn’t require that you apply mask images only to other images, though. You can mask pretty much any element with an image, and that image can be a raster image (GIF, JPG, PNG) or a vector image (SVG). The latter is usually a better choice, if available. You can even construct your own image with gradients, whether linear or radial, repeated or otherwise.")]),t._v(" "),a("p",[t._v("The following styles will have the result shown in Figure 19-23:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("*.masked.theatre")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("theatre-masks.svg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("*.masked.compass")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Compass.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-23"}},[t._v("A variety of image masks")]),t._v(" "),a("p",[t._v("An important point to keep in mind is that when a mask clips off pieces of an element, it clips off all pieces. The best example of this is how, if you apply an image that clips off the outer edges of elements, the markers on list items can very easily become invisible. An example can be seen in Figure 19-24, which is the result of the following:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("*.masked")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i/Compass_masked.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("masked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("One"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Two"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Three"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Four"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Five"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-24"}},[t._v("List items, masked and unmasked")]),t._v(" "),a("p",[t._v("There is one other value option we haven’t seen yet, which is the ability to point directly at a "),a("code",[t._v("<mask>")]),t._v(" element in SVG to use the mask it defines. This analogous to pointing to a "),a("code",[t._v("<clipPath>")]),t._v(" or other SVG element from the property clip-path, as was discussed previously in “Clipping” on page 965.")]),t._v(" "),a("p",[t._v("Here’s an example of how a mask might be defined:")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("svg")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("viewbox")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0 0 100 100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xmlns")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.w3.org/2000/svg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mask")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("hexlike"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("path")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("fill")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("#FF0000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("d")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("M 50,0 100,25 100,75 50,100 0,75 0,25"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("mask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("svg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("With that SVG embedded in the HTML file directly, the mask can be referenced like this:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".masked")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("#hexlike"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("If the SVG is in an external file, then this is how to reference it from CSS:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".masked")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("masks.svg#hexlike"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_19-5-2-changing-the-mask-s-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-5-2-changing-the-mask-s-mode"}},[t._v("#")]),t._v(" 19.5.2 Changing the Mask’s Mode")]),t._v(" "),a("p",[t._v("Thus far, we’ve seen masking accomplished by applying an image with an alpha channel to another element. That’s one of two ways to use an image as a mask. The other is to use the brightness of each part of the masking image to define the mask. Switching between these two options is accomplished with the mask-mode property.")]),t._v(" "),a("Cards",{attrs:{cards:"mask-mode"}}),t._v(" "),a("p",[t._v("Two of the three values are straightforward: alpha means the alpha channel of the image should be used to compute the mask, and luminance means the brightness levels should be used. The difference is illustrated in Figure 19-25, which is the result of the following code:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img.theatre")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i/theatre-masks.svg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img.compass")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i/Compass_masked.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img.lum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" luminance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("i/theatre-masks.svg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("theatre"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("i/mask.JPG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("theatre lum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("i/mask.JPG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("i/Compass_masked.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("compass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("i/mask.JPG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("compass lum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("i/mask.JPG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[t._v("When luminance is used to calculate the mask, brightness is treated the same way alpha values are in alpha masking. Consider how alpha masking works: any part of the image with opacity of zero hides that part of the masked element. A part of the image with opacity of one (that is, fully opaque) reveals that part of the masked element.")]),t._v(" "),a("p",[t._v("The same is true with luminance-based masking. A part of the mask with luminosity of one reveals that part of the masked element. A part of the mask with luminosity of zero (that is, fully black) hides that part of the masked element. But note that any fully transparent part of the mask is also treated as having a luminance of zero. This is why the shadow portion of the theatre-mask image doesn’t show any part of the masked image: its alpha value is greater than zero.")]),t._v(" "),a("Figures",{attrs:{figure:"19-25"}},[t._v("Alpha and luminance mask modes")]),t._v(" "),a("p",[t._v("The third (and default) value, match-source, is a combination of alpha and lumi nance, choosing between them based on the actual source image for the mask as follows:")]),t._v(" "),a("ul",[a("li",[t._v("If the source is a type of "),a("code",[t._v("<image>")]),t._v(", then use alpha. "),a("code",[t._v("<image>")]),t._v("s can be an image such as a PNG or visible SVG; a CSS gradient; or a piece of the page referred to by the element() function.")]),t._v(" "),a("li",[t._v("If the source is an SVG "),a("code",[t._v("<mask>")]),t._v(" element, then use luminance.")])]),t._v(" "),a("h3",{attrs:{id:"_19-5-3-sizing-and-repeating-masks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-5-3-sizing-and-repeating-masks"}},[t._v("#")]),t._v(" 19.5.3 Sizing and Repeating Masks")]),t._v(" "),a("p",[t._v("Thus far, nearly all the examples have been carefully crafted to make each mask’s size match the size of the element it’s masking. (This is why we keeping applying masks to images.) Mask images may be a different size than the masked element. There a couple of ways to deal with this, starting with mask-size.")]),t._v(" "),a("Cards",{attrs:{cards:"mask-size"}}),t._v(" "),a("p",[t._v("If you’ve ever sized background images, then you know exactly how to size masks, because the value syntax is exactly the same, as are the behaviors. As an example, consider the following styles, which have the result shown in Figure 19-26:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i/hexlike.svg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(1)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100% 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(2)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50% 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(3)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2em 3em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(4)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cover"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(5)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" contain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(6)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200% 50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-26"}},[t._v("Sizing masks")]),t._v(" "),a("p",[t._v("Again, these should be immediately familiar to you if you’ve ever sized backgrounds. If not, please see “Sizing Background Images” on page 433 in Chapter 9 for a more detailed exploration of the possibilities.")]),t._v(" "),a("p",[t._v("In a like vein, just as the pattern of backgrounds repeating throughout the background area of the element can be changed or suppressed, mask images can be affected with mask-repeat.")]),t._v(" "),a("Cards",{attrs:{cards:"mask-repeat"}}),t._v(" "),a("p",[t._v("The values available here are the same as those for background-repeat. Some examples are shown in Figure 19-27, based on the following styles:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i/theatre-masks.svg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(1)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" no-repeat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10% auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(2)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" repeat-x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10% auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(3)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" repeat-y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10% auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(4)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" repeat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30% auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(5)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" repeat round"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30% auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(6)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" space no-repeat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 21% auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-27"}},[t._v("Repeating masks")]),t._v(" "),a("h3",{attrs:{id:"_19-5-4-positioning-masks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-5-4-positioning-masks"}},[t._v("#")]),t._v(" 19.5.4 Positioning Masks")]),t._v(" "),a("p",[t._v("Given that sizing and repetition of mask images mirrors the sizing and repetition of background images, you might think that the same is true for positioning the origin mask image, similar to background-position, as well as the origin box, similar to background-origin. And you’d be exactly right.")]),t._v(" "),a("Cards",{attrs:{cards:"mask-position"}}),t._v(" "),a("p",[t._v("Once again, if you’ve ever positioned a background image, then you know how to position mask images. Following are a few examples, illustrated in Figure 19-28 (dotted borders have been added for clarity):")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i/Compass_masked.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" no-repeat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 67% auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(1)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(2)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" top right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(3)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 33% 80%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(4)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5em 120%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-28"}},[t._v("Positioning masks")]),t._v(" "),a("p",[t._v("By default, the origin box for mask images is the outer border edge. If you want to move it further inward, or define a specific origin box in an SVG context, then maskorigin does for masks what background-origin does for backgrounds.")]),t._v(" "),a("Cards",{attrs:{cards:"mask-origin"}}),t._v(" "),a("p",[t._v("This is a newer capability for backgrounds, so you might not be familiar with it. For the full story, see “Changing the Positioning Box” on page 414 in Chapter 9, but for a quick example, see Figure 19-29.")]),t._v(" "),a("Figures",{attrs:{figure:"19-29"}},[t._v("Changing the origin box")]),t._v(" "),a("h3",{attrs:{id:"_19-5-5-clipping-and-compositing-masks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-5-5-clipping-and-compositing-masks"}},[t._v("#")]),t._v(" 19.5.5 Clipping and Compositing Masks")]),t._v(" "),a("p",[t._v("There’s one more property that echoes backgrounds, and that’s mask-clip, the mask equivalent of background-clip.")]),t._v(" "),a("Cards",{attrs:{cards:"mask-clip"}}),t._v(" "),a("p",[t._v("All this does is clip the overall mask to a specific area of the masked element. In other words, it restricts the area in which the visible parts of the element are in fact visible. Figure 19-30 shows the result of the following styles:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("pading")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2em solid purple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i/Compass_masked.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" no-repeat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 125%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(1)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-clip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(2)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-clip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" padding-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:nth-child(3)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-clip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" content-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-30"}},[t._v("Clipping the mask")]),t._v(" "),a("p",[t._v("The last focused masking property, mask-composite, is quite interesting because it can radically change how multiple masks interact.")]),t._v(" "),a("Tips",{attrs:{tips:"orange"}},[t._v("mask-composite is not supported by Chrome, even in a prefixed form.")]),t._v(" "),a("Cards",{attrs:{cards:"mask-composite"}}),t._v(" "),a("p",[t._v("If you aren’t familiar with compositing operations, a diagram is in order. See Figure 19-31.")]),t._v(" "),a("Figures",{attrs:{figure:"19-31"}},[t._v("Compositing operations")]),t._v(" "),a("p",[t._v("As depicted in Figure 19-31, the image on top in the operation is called the source, and the image beneath it is called the destination.")]),t._v(" "),a("p",[t._v("This doesn’t particularly matter for three of the four operations: add, intersect, and exclude, all of which have the same result regardless of which image is the source and which the destination. But for subtract, the question is: which image is being subtracted from which? The answer: the destination is subtracted from the source.")]),t._v(" "),a("p",[t._v("The difference is quite substantial. You can see this by considering Figure 19-32, which shows how switching the order of the shapes in the subtraction operation changes the outcome.")]),t._v(" "),a("Figures",{attrs:{figure:"19-32"}},[t._v("Subtracted masks")]),t._v(" "),a("p",[t._v("The other place the distinction between source and destination becomes important is when compositing multiple masks together. In these cases, the compositing order is from back to front, with each succeeding layer being the source and the alreadycomposited layers beneath it comprising the destination.")]),t._v(" "),a("p",[t._v("To see why, consider Figure 19-33, which shows the various ways three overlapping masks are composited together, and how results change with changes to their order and compositing operations.")]),t._v(" "),a("p",[t._v("The figure is constructed to show the bottommost mask at the bottom, the topmost above the other two, and the resulting mask shown at the very top. Thus, in the first column, the triangle and circle are composited with an exclusion operation. The resulting shape is then composited with the square using an additive operation. That results in the mask shown at the top of the first column.")]),t._v(" "),a("p",[t._v("Just remember that when doing a subtraction composite, the bottom shape is subtracted from the shape above it. Thus, in the third column, the addition of the triangle and circle are subtracted from the square above them.")]),t._v(" "),a("Figures",{attrs:{figure:"19-33"}},[t._v("Compositing masks")]),t._v(" "),a("h3",{attrs:{id:"_19-5-6-bringing-it-all-together"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-5-6-bringing-it-all-together"}},[t._v("#")]),t._v(" 19.5.6 Bringing It All Together")]),t._v(" "),a("p",[t._v("All of the preceding mask properties are brought together in the shorthand property mask.")]),t._v(" "),a("Cards",{attrs:{cards:"mask"}}),t._v(" "),a("p",[t._v("mask, like all the other masking properties, accepts a comma-separated list of masks.")]),t._v(" "),a("p",[t._v("The order of the values in each mask can be anything except for the mask size, which always follows the position and is separated from it by a solidus (/).")]),t._v(" "),a("p",[t._v("Thus, the following rules are equivalent:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#example")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("circle.svg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("square.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("triangle.gif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" repeat-y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" no-repeat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" top right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 25% 67%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-composite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" subtract"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 50% 33%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" contain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#example")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("circle.svg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" repeat-y top right / auto subtract"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("square.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n      no-repeat center / 50% 33% add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("triangle.gif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" repeat-y 25% 67% / contain add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("What will happen is the triangle and square are added together, and then the result of that additive composite is subtracted from the circle. The result is shown in Figure 19-34 as applied to a square element (the teal shape on the left) and a shape wider than it is tall (the goldenrod shape on the right).")]),t._v(" "),a("Figures",{attrs:{figure:"19-34"}},[t._v("Two masks")]),t._v(" "),a("h3",{attrs:{id:"_19-5-7-mask-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-5-7-mask-types"}},[t._v("#")]),t._v(" 19.5.7 Mask Types")]),t._v(" "),a("p",[t._v("In situations where you’re using CSS to style SVG elements, and you want to set the type of mask an SVG "),a("code",[t._v("<mask>")]),t._v(" element is, then mask-type is for you.")]),t._v(" "),a("Cards",{attrs:{cards:"mask-type"}}),t._v(" "),a("p",[t._v("This property is very much similar to mask-mode, except there is no equivalent to match-source. You can only choose luminance or alpha.")]),t._v(" "),a("p",[t._v("The interesting thing is that if mask-type is set for a "),a("code",[t._v("<mask>")]),t._v(" element that’s used to mask an element, and mask-mode is declared for that masked element, then maskmode wins. As example, consider the following rules:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("svg #mask")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask-type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" alpha"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img.masked")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("mask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("#mask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" no-repeat center/cover luminance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Given these rules, the masked images will have a mask with luminance compositing, not alpha compositing. If the mask-mode value were left at its default value, matchsource, then ask-type’s value would be used instead.")]),t._v(" "),a("h3",{attrs:{id:"_19-5-8-border-image-masking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-5-8-border-image-masking"}},[t._v("#")]),t._v(" 19.5.8 Border-image Masking")]),t._v(" "),a("p",[t._v("The same specification that defines clipping paths and element masking, CSS Masking Level 1, also defines a number of properties that are used to apply masking images in a way that mirrors border-image properties. In fact, the properties between border images and border-image masks are direct analogues, and the values the same.")]),t._v(" "),a("p",[t._v("The drawback is that as of late 2017, no browser had even a hint of support for these properties, nor was there any indication of plans for such in the near future. So rather than going through them in detail here, we’ll just summarize them here:")]),t._v(" "),a("p",[a("code",[t._v("mask-border-source")])]),t._v(" "),a("p",[t._v("Points to the image to be used as a mask. Can be a URL, gradient, or other "),a("code",[t._v("<image>")]),t._v(" value type.")]),t._v(" "),a("p",[a("code",[t._v("mask-border-slice")])]),t._v(" "),a("p",[t._v("Defines how the source image is sliced into pieces for use as borders, and whether the interior is filled.")]),t._v(" "),a("p",[a("code",[t._v("mask-border-width")])]),t._v(" "),a("p",[t._v("Defines the actual width(s) of the border area around the element, into which the various slices of the source image will be placed (and resized, if necessary).")]),t._v(" "),a("p",[a("code",[t._v("mask-border-outset")])]),t._v(" "),a("p",[t._v("Defines a distance past the edges of the element’s default border where the border image may be drawn.")]),t._v(" "),a("p",[a("code",[t._v("mask-border-repeat")])]),t._v(" "),a("p",[t._v("Sets a repetition pattern for cases when the source image’s slices do not precisely fit the border area into which they are placed. This includes behaviors like resizing the image slice to fit.")]),t._v(" "),a("p",[a("code",[t._v("mask-border-mode")])]),t._v(" "),a("p",[t._v("Declares whether the masking mode is alpha-based, or luminance-based.")]),t._v(" "),a("p",[a("code",[t._v("mask-border")])]),t._v(" "),a("p",[t._v("A shorthand property covering all the previous properties.")]),t._v(" "),a("p",[t._v("If you want to get an idea of how these would work in practice, refer to the section of Chapter 8 titled “Image Borders” on page 352 and imagine the border images as masks instead.")]),t._v(" "),a("h2",{attrs:{id:"_19-6-object-fitting-and-positioning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-6-object-fitting-and-positioning"}},[t._v("#")]),t._v(" 19.6 Object Fitting and Positioning")]),t._v(" "),a("p",[t._v("There is one more variety of masking, sort of, that applies solely to replaced elements like images. With object-fit, you can change how the replaced element fills its element box—or have it not fill that box completely.")]),t._v(" "),a("Cards",{attrs:{cards:"object-fit"}}),t._v(" "),a("p",[t._v("If you’ve ever worked with background-size, these values probably look familiar.")]),t._v(" "),a("p",[t._v("They do similar things, too, only with replaced elements.")]),t._v(" "),a("p",[t._v("For example, assume a 50 × 50 pixel image. We can change its size via CSS, something\nlike this:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 250px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 150px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("The default expectation is that will stretch the 50 × 50 image to be 250 × 150. And if object-fit is its default value, fill, that’s exactly what happens.")]),t._v(" "),a("p",[t._v("Change the value of object-fit, however, and other behaviors occur, as illustrated in Figure 19-35, which might result from CSS like this:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 250px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 150px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" silver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3px solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img:nth-of-type(1)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-fit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img:nth-of-type(2)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-fit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fill"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img:nth-of-type(3)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-fit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cover"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img:nth-of-type(4)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-fit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" contain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-35"}},[t._v("Four kinds of object fitting")]),t._v(" "),a("p",[t._v("In the first instance, none, the img element is drawn 250 pixels wide by 150 pixels tall. The image itself, however, is drawn 50 × 50 pixels—its intrinsic size—because it was directed to not fit the element box. The second instance, fill, is the default behavior, as mentioned.")]),t._v(" "),a("p",[t._v("In the third instance, cover, the image is scaled up until no part of the element box is left “uncovered”—but the image itself keeps its intrinsic aspect ratio. In other words, the image stays a square. In this case, the longest axis of the img element is 250px long, so the image is scaled up to be 250 × 250 pixels. That 250 × 250 image is then placed in the 250 × 150 img element.")]),t._v(" "),a("p",[t._v("The fourth instance, contain, is similar, except the image is only big enough to touch two sides of the img element. This means the image is 150 × 150 pixels, and placed into the 250 × 150 pixel box of its img element.")]),t._v(" "),a("p",[t._v("To reiterate, what you see in Figure 19-35 is four img elements. There are no wrapper div or span or anything other elements around those images. The border and background color are part of the img element. The image placed inside the img element is fitted according to object-fit. The element box of the img element then acts rather like it’s a simple mask for the fitted image inside it. (And then you can mask and clip the element box with the properties covered earlier in this chapter.)")]),t._v(" "),a("p",[t._v("There is a fifth value for object-fit not represented in Figure 19-35, which is scaledown. The meaning of scale-down is “do the same as either none or contain, whichever leads to a smaller size.” This lets an image always be its intrinsic size unless the img element gets too small, in which case it’s scaled down á la contain. This is illustrated in Figure 19-36, where each img element is labeled with the height values they’ve been given; the width in each case is 100px.")]),t._v(" "),a("Figures",{attrs:{figure:"19-36"}},[t._v("Various scale-down scenarios")]),t._v(" "),a("p",[t._v("So if a replaced element is bigger or smaller than the element box into which it’s being fit, how can we affect its alignment within that box? object-position is the answer.")]),t._v(" "),a("Cards",{attrs:{cards:"object-position"}}),t._v(" "),a("p",[t._v("The value syntax here is just like that for mask-position or background-position, allowing you to position a replaced element within its element box if it isn’t set to object-fit: fill. Thus, given the following CSS, we get the result shown in Figure 19-37:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" silver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-fit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img:nth-of-type(2)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" top left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img:nth-of-type(3)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 67% 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img:nth-of-type(4)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left 142%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-37"}},[t._v("A variety of object positions")]),t._v(" "),a("p",[t._v("Notice that the first example in Figure 19-37 has a value of 50% 50%, even though that isn’t present in the CSS sample. That illustrates how the default value of objectposition is 50% 50%. The next two examples show how various object-position values move the image around within the img element box.")]),t._v(" "),a("p",[t._v("As the last example shows, it’s possible to move an unscaled replaced element like an image so that it’s partly clipped by its element box. This is similar to positioning background images or masks so that they are clipped at the element boundaries.")]),t._v(" "),a("p",[t._v("It’s also possible to position fitted elements that are larger than the element box, as can happen with object-fit: cover, although the results can be very different than with object-fit: none. The following CSS will have results like those shown in Figure 19-38:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" silver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-fit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cover"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img:nth-of-type(2)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" top left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img:nth-of-type(3)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 67% 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img:nth-of-type(4)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left 142%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("Figures",{attrs:{figure:"19-38"}},[t._v("Positioning a covered object")]),t._v(" "),a("p",[t._v("If any of these results confuse you, review the section “Background Positioning” on page 404 for more details.")])],1)}),[],!1,null,null,null);e.default=n.exports}}]);